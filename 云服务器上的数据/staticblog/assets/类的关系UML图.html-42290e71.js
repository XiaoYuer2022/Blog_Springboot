import{$ as e,a0 as s,a1 as n,a6 as a,a2 as t,a5 as l}from"./framework-e783454b.js";const r={},p=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"提示"),t("p",null,"UML图图示")],-1),g=l('<p>基本关系预览图如下： <img src="https://s3.bmp.ovh/imgs/2022/08/26/b5cd7823d6081560.png" alt="图1" loading="lazy"></p><p>首先，一个矩形就表示一个类，分为三行。第一行为类名，如果为斜体就是抽象类，第二行为类的属性（变量），第三行为类的方法（函数）。第二行的属性名和第三行的方法名前，+表示public，-表示private，#表示protected。如下图所示。 <img src="https://s3.bmp.ovh/imgs/2022/08/26/31e4605813d2c887.jpg" alt="图2" loading="lazy"></p><p>然后，是接口。接口有两种表示方法。方法一：矩阵表示法。矩阵第一行顶端有《interface》,第一行还有接口的名称，第二行是接口的方法。方法二：棒棒糖表示法：圆圈旁为接口名称，接口方法在实现类中出现。见下图所示： <img src="https://s3.bmp.ovh/imgs/2022/08/26/65811fa415ced78b.png" alt="图3" loading="lazy"></p><p>再然后，是类与类之间和类与接口之间的关系。类与类之间，有继承关系、关联关系、聚合关系、合成（组合）关系和依赖关系。类与接口之间有实现接口关系。</p><table><thead><tr><th style="text-align:center;">关系</th><th style="text-align:center;">表示方式</th></tr></thead><tbody><tr><td style="text-align:center;">继承关系</td><td style="text-align:center;">空心三角形+实线</td></tr><tr><td style="text-align:center;">关联关系</td><td style="text-align:center;">实线箭头</td></tr><tr><td style="text-align:center;">聚合关系</td><td style="text-align:center;">空心菱形+实线箭头</td></tr><tr><td style="text-align:center;">组合关系</td><td style="text-align:center;">实心菱形+实线箭头</td></tr><tr><td style="text-align:center;">依赖关系</td><td style="text-align:center;">虚线箭头</td></tr><tr><td style="text-align:center;">（类与接口）实现接口的关系</td><td style="text-align:center;">空心三角形+虚线</td></tr></tbody></table><p>1.1 类一类之间的继承关系。用<strong>空心三角形+实线</strong>来表示。 <img src="https://s3.bmp.ovh/imgs/2022/08/26/04d598806cfc056e.png" alt="图4" loading="lazy"> 1.2 类一类之间的关联关系。用<strong>实心箭头</strong>来表示。</p><p>企鹅与气候有很大的关联，企鹅需要知道气候的变化，需要了解气候规律。所以，企鹅继承于鸟基类，且有一个私有属性：气候。 <img src="https://s3.bmp.ovh/imgs/2022/08/26/21502e3c6a8adcef.jpg" alt="图5" loading="lazy"> 1.3 类一类之间的聚合关系。用<strong>空心的菱形+实线箭头</strong>来表示。</p><p>聚合表示一种弱的拥有关系。体现的是A对象可以包含B对象，但B对象不是A对象的一部分。大雁可以聚合起来，称为大雁群，也可以不聚合，称为单雁。 <img src="https://s3.bmp.ovh/imgs/2022/08/26/cb326bbfa3cfd4ac.jpg" alt="图6" loading="lazy"> 1.4 类一类之间的合成（组合）关系。用<strong>实心菱形+实线箭头</strong>来表示。</p><p>合成关系与聚合关系不同，合成关系表示一种强的拥有关系。鸟拥有羽毛，这是必然的，他们两是整体与部分的关系，并且生命周期相同。合成关系用<strong>实心菱形和实线箭头</strong>来表示，另外，你会注意到合成关系的连线两端还有一个数字‘1’和&#39;2&#39;，这被称为基数，表明这一段的类可以有几个实例。很显然，一只鸟应该有两只翅膀。注意：关联关系、聚合关系也可以有基数。 <img src="https://s3.bmp.ovh/imgs/2022/08/26/454c5f84f6533087.png" alt="图7" loading="lazy"> 1.5 类一类之间的依赖关系。用<strong>虚线箭头</strong>来表示。</p><p>依赖关系就如字面意思，动物依赖于水，依赖于氧气。依赖关系用<strong>虚线箭头</strong>表示。 <img src="https://s3.bmp.ovh/imgs/2022/08/26/1fe1c94bb8cb10bd.jpg" alt="图8" loading="lazy"> 2.1 类与接口之间的实现接口关系，用空心三角形+虚线表示。</p><p>实现接口和继承很类似，继承关系是空心三角形+实线来表示的。注意，仅当用矩阵表示法来表示接口时采用空心三角形+虚线表示，用棒棒糖法来表示接口时，无需其他说明。 <img src="https://s3.bmp.ovh/imgs/2022/08/26/022180a1216da787.png" alt="图9" loading="lazy"></p><p><strong>总结</strong>： 更一般地，一个小总结：继承关系/关联关系/聚合关系/合成关系/依赖关系，以及一个实现接口关系。</p><p>继承关系就是在子类名的定义中，类名后加上：public 基类名。</p><p>关联关系就是在类中定义一个私有属性，例如企鹅和气候有关联关系，那么就在企鹅类中定义一个气候的私有变量。</p><p>聚合关系就是在B类中定义一个私有数组变量，该数组变量的类型是A类。</p><p>合成关系就是在B类中定义一个A类的私有变量，并在B类的构造函数中完成A类对象的实例化。他们两同时生成，同时死亡。</p><p>依赖关系：动物类的属性是有生命，方法是新陈代谢。氧气类和水类是与方法--新陈代谢有关，所以在动物类的新陈代谢方法里，氧气类和水类作为方法的形参进行传递。</p>',17);function c(i,o){return s(),n("div",null,[p,a(" more "),g])}const m=e(r,[["render",c],["__file","类的关系UML图.html.vue"]]);export{m as default};
