import{$ as _,a0 as s,a1 as r,a6 as c,a2 as l,a3 as t,a4 as n,a9 as e,I as u}from"./framework-e783454b.js";const a={},i=l("div",{class:"hint-container tip"},[l("p",{class:"hint-container-title"},"提示"),l("p",null,"设计模式总结")],-1),h={href:"https://www.bilibili.com/video/BV1Mb411t7ut?p=11&vd_source=d0ee64ac63fa4af6553687c1e0a80570",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/weixin_42636062/category_11313224.html",target:"_blank",rel:"noopener noreferrer"},p=l("thead",null,[l("tr",null,[l("th",null,"创建型模式"),l("th",null,"描述")])],-1),m=l("td",null,null,-1),b=l("td",null,null,-1),x=l("td",null,null,-1),k=l("td",null,null,-1),v=l("tr",null,[l("td",null,"原型模式"),l("td")],-1),B=l("tr",null,[l("td",null,"建造者模式"),l("td")],-1),w=l("p",null,"结构型模式，就是让类和类进行组合，获得更大的结构。",-1),N=l("thead",null,[l("tr",null,[l("th",null,"结构型模式"),l("th",null,"描述")])],-1),V=l("td",null,null,-1),g=l("td",null,null,-1),y=l("td",null,null,-1),C=l("td",null,null,-1),E=l("tr",null,[l("td",null,"桥接模式"),l("td")],-1),I=l("tr",null,[l("td",null,"组合模式"),l("td")],-1),L=l("tr",null,[l("td",null,"享元模式（共享）"),l("td")],-1),D=l("p",null,"行为型模式，用来对类或对象怎样交互和怎样分配职责进行描述。",-1),F=l("thead",null,[l("tr",null,[l("th",null,"行为型模式"),l("th",null,"描述")])],-1),G=l("td",null,null,-1),M=l("td",null,null,-1),S=l("td",null,null,-1),T=l("td",null,null,-1),$=l("tr",null,[l("td",null,"职责链模式"),l("td")],-1),j=l("tr",null,[l("td",null,"解释器模式"),l("td")],-1),q=l("tr",null,[l("td",null,"迭代器模式"),l("td")],-1),z=l("tr",null,[l("td",null,"中介者模式"),l("td")],-1),A=l("tr",null,[l("td",null,"备忘录模式"),l("td")],-1),H=l("tr",null,[l("td",null,"状态模式"),l("td")],-1),J=l("tr",null,[l("td",null,"访问者模式"),l("td")],-1);function K(O,P){const d=u("ExternalLinkIcon"),o=u("font");return s(),r("div",null,[i,c(" more "),l("p",null,[t("由GoF提出的设计模式有23种，再加上一种简单工厂模式，一共有24种模式，并大致分为三类。内容参考了"),l("a",h,[t("BiliBili视频黑马程序员(学完c++提高后在学这个)"),n(d)]),t("，以及热心网友整理的学习笔记："),l("a",f,[t("CSDN博客"),n(d)]),t("，此外，程杰的《大话设计模式》一书也给此次笔记整理提供了巨大的帮助。")]),l("table",null,[p,l("tbody",null,[l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("简单工厂模式")]),_:1})]),m]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("工厂方法模式")]),_:1})]),b]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("抽象工厂模式")]),_:1})]),x]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("单例模式")]),_:1})]),k]),v,B])]),w,l("table",null,[N,l("tbody",null,[l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("代理模式")]),_:1})]),V]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("装饰模式")]),_:1})]),g]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("外观模式")]),_:1})]),y]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("适配器模式")]),_:1})]),C]),E,I,L])]),D,l("table",null,[F,l("tbody",null,[l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("模板模式")]),_:1})]),G]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("命令模式")]),_:1})]),M]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("策略模式")]),_:1})]),S]),l("tr",null,[l("td",null,[n(o,{color:"red"},{default:e(()=>[t("观察者模式")]),_:1})]),T]),$,j,q,z,A,H,J])])])}const R=_(a,[["render",K],["__file","设计模式总结.html.vue"]]);export{R as default};
