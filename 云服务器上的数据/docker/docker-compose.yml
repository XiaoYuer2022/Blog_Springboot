version: "3"
services:
  blog-service:
    build: .
    image: blog-springboot:latest
    container_name: blog-springboot
    restart: always
    depends_on:
      - mysql
      - redis
      - rabbitmq
    volumes:
      - "/usr/local/upload:/usr/local/upload"
    ports:
      - "8080:8080"
    networks:
      - blog-net
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Shanghai
    ports:
      - "3380:3306"
    networks:
      - blog-net
  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    restart: always
    command: --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    networks:
      - blog-net
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - blog-net
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    restart: always
    volumes:
      - "/usr/local/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "/usr/local/nginx/403.html:/etc/nginx/403.html"
      - "/etc/ssl/certs:/etc/ssl/certs"
      - "/usr/local/vue:/usr/local/vue"
      - "/usr/local/upload:/usr/local/upload"
      - "/usr/local/staticblog:/usr/local/staticblog"
    privileged: true
    ports:
      - "443:443"
      - "80:80"
    networks:
      - blog-net
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    privileged: true
    ports:
      - "8888:8080"
    networks:
      - blog-net
networks:
  es-net:
    driver: bridge
  blog-net:
    driver: bridge
